[covering]
#covering - if start covering allowed
is_start_covering_allowed = False
#covering - if full covering
is_full_covering_allowed = False
#covering - if universal covering
is_universal_covering_allowed = False
#covering - if terminal covering allowed
is_terminal_covering_allowed = True
#covering - probability of agressive covering - [0, 1]
aggressive_covering_probability = 0.4
#covering - types of the covering used in the application
#[smart_covering, nakamura_covering, covering_plus, standard_covering]
terminal_covering_type = covering_plus
#[new_covering, smart_covering_with_tabu, smart_covering, nakamura_covering, covering_plus, standard_covering]
aggressive_covering_type = covering_plus
#[covering_plus, standard_covering]
final_covering_type = covering_plus
#[covering_plus, standard_covering]
start_covering_type = covering_plus

[new_covering]
#[0, 1]
usage_probability = 0.5
#[0, inf]
the_best_rules_number = 20
#[True, False]
roulette_selection_enabled = False

[genetic_algorithm]
#genetic algorithm - if genetic algorithm allowed
is_ga_allowed = False
#genetic algoirthm - selection type for genetic algorithm for first rule
#[TOURNAMENT, ROULETTE, RANDOM]
first_rule_selection_type = ROULETTE
#genetic algoirthm - selection type for genetic algorithm for second rule
#[TOURNAMENT, ROULETTE, RANDOM]
second_rule_selection_type = ROULETTE
#genetic algorithm - crossing probability
#[0,1]
crossing_probability = 0.5
#genetic algorithm - inversion probability
#[0,1]
inversion_probability = 0.0
#genetic algorithm - mutation probability
#[0,1]
mutation_probability = 0.4
#genetic algorithm - size of started population used in roulette rule
#[0, inf]
tournament_selection_subpopulation_size = 4

[general]
adaptive_elitism_alpha = 0.9
elitism_upper_bound = 0.33
allow_adaptive_elitism = False
#general - type selected algorithm
gcs_mode = sGCS
#general - testset path
train_set_path = NewTestSets/TomitaNew/tomita_2.txt
#test_set_path = NewTestSets/CorporaAbbadingo/alice-train.txt
test_set_path = NewTestSets/TomitaNew/tomita_2.txt
#general - if stop condition (pefectly fit) is allowed
is_perfectly_fit_stop_condition_allowed = False
#general - if grammar correction allowed
is_grammar_correction_allowed = True
#general - crowding type albo innem
crowding_type = STANDARD
#general - remove from grammar unused rule after learning
remove_grammar_unused_rules_after_learning = True
#general - allow to remove locks
allow_lock_removal_algorithm = False
#general - initialize with random rules
initialize_with_random_rules = True
#general - removing wrong rules at the end of iteration
remove_parsing_only_negative_rules_at_end_of_iteration = False
#general - max evolutionary steps
max_evolutionary_steps = 30
#general - amount non terminal symbols
non_terminal_symbols_number = 19
#general - number non terminal productions
non_terminal_productions_number = 5
#general - amount reserved roulette roule
reversed_roulette_rule_count = 5
#general - counting propability mode
s_mode = BaumWelch
#general -  rules handlig type
aaa_rules_handling_type = TERMINALS
#name of trace in chart
trace_name = "Try 1"

[crowding]
crowding_enabled = True
#crowding - amount saved rules from crowding
elite_rules_number = 5
#crowding - amount selected from random where chosen the worst
crowding_factor = 18
#crowding - amount selected from random
#[1, inf]
crowding_population = 3

[fitness]
#fitness - weight true sentence partition
weight_proper_prased_rule = 1.0
#fitness - weight false sentence partition
weight_not_proper_parsed_rule = 1.0
#fitness - weight classic function
weight_classic_fitness = 1.0
#fitness - weight fertility function
weight_fertility_fitness = 1.0
#fitness - value non used classifier
non_used_rule_fitness = 0.5

[rules]
#rules - base amount
base_amount = 1.0
#rules - base amount reduction coefficient
base_amount_reduction_coefficient = 0.5

[sgcs]
# IO treshold - difference between adapting currenent and last grammar
io_grammar_difference_stop = 0.05
probability_estimation_method = IO
new_ones_only = False
negative_sample_estimation = False
#OnlyPositivesEstimation, DifferentialEstimation, Standard
estimation_type = Standard
parsing_threshold = 0.0

